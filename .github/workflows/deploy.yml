name: Deploy Spring Boot App

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Grant execute permission for Gradle
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Create .env file
        run: |
          cat <<EOF > .env
          SPRING_DATASOURCE_URL="${{ secrets.SPRING_DATASOURCE_URL }}"
          SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }}
          SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }}
          JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}
          OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
          KAKAO_REST_API_KEY=${{ secrets.KAKAO_REST_API_KEY }}
          REDIS_HOST=localhost
          REDIS_PORT=6379
          EOF

      - name: Save PEM file
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > kinover-key.pem
          chmod 600 kinover-key.pem

      - name: Deploy to EC2 (JAR + .env)
        run: |
          scp -i kinover-key.pem -o StrictHostKeyChecking=no build/libs/*.jar .env ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/ubuntu/app/

      - name: Restart Spring Boot App via SSH
        run: |
          ssh -i kinover-key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            echo "🔁 Restarting Spring Boot..."
            pkill -f "java -jar" || true
            cd /home/ubuntu/app
            JAR_NAME=$(ls | grep -v plain.jar | grep '.jar$' | head -n 1)
            echo "✅ Running JAR: $JAR_NAME"
            
            # 👉 .env를 환경변수로 export!!
            set -a
            source .env
            set +a
      
            nohup java -jar $JAR_NAME > nohup.out 2>&1 &
            sleep 3
            echo "✅ Restart complete"
          EOF
