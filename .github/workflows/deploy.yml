name: Deploy Spring Boot to EC2

on:
  push:
    branches:
      - main  # 또는 네가 사용하는 브랜치 이름

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      SPRING_DATASOURCE_URL: ${{ secrets.SPRING_DATASOURCE_URL }}
      SPRING_DATASOURCE_USERNAME: ${{ secrets.SPRING_DATASOURCE_USERNAME }}
      SPRING_DATASOURCE_PASSWORD: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}
      JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'  # 네가 사용하는 버전으로 설정

      - name: Grant permission to execute Gradle
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Deploy to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu  # 여기서 'ubuntu'로 수정
          key: ${{ secrets.EC2_KEY }}
          source: "build/libs/*.jar"
          target: "/home/ubuntu/app"  # EC2에서 ubuntu 계정으로 경로 설정

      - name: SSH to EC2 and restart app
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu  # 여기서 'ubuntu'로 수정
          key: ${{ secrets.EC2_KEY }}
          script: |
            pkill -f 'java -jar' || true
            export SPRING_DATASOURCE_URL=${{ secrets.SPRING_DATASOURCE_URL }}
            export SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }}
            export SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }}
            export JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}
            export OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
            nohup java -jar /home/ubuntu/app/*.jar > app.log 2>&1 &
